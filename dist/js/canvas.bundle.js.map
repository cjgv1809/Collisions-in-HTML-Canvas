{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/canvas.js","webpack:///./src/js/utils.js"],"names":["canvas","document","querySelector","c","getContext","width","innerWidth","height","innerHeight","mouse","x","y","colors","addEventListener","event","clientX","clientY","animate","requestAnimationFrame","fillStyle","fillRect","console","log","randomIntFromRange","min","max","Math","floor","random","randomColor","length","distance","x1","y1","x2","y2","xDist","yDist","sqrt","pow","rotate","velocity","angle","rotatedVelocities","cos","sin","resolveCollision","particle","otherParticle","xVelocityDiff","yVelocityDiff","atan2","m1","mass","m2","u1","u2","v1","v2","vFinal1","vFinal2","module","exports"],"mappings":"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","file":"./js/canvas.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/canvas.js\");\n","import utils from \"./utils\";\r\n\r\n/*----------------- Collision Part1 ------------------------ */\r\n\r\n// const canvas = document.querySelector(\"canvas\");\r\n// const c = canvas.getContext(\"2d\");\r\n\r\n// canvas.width = innerWidth;\r\n// canvas.height = innerHeight;\r\n\r\n// const mouse = {\r\n//   x: 10,\r\n//   y: 10,\r\n// };\r\n\r\n// const colors = [\"#2185C5\", \"#7ECEFD\", \"#FFF6E5\", \"#FF7F66\"];\r\n\r\n// // Event Listeners\r\n// addEventListener(\"mousemove\", (event) => {\r\n//   mouse.x = event.clientX;\r\n//   mouse.y = event.clientY;\r\n// });\r\n\r\n// addEventListener(\"resize\", () => {\r\n//   canvas.width = innerWidth;\r\n//   canvas.height = innerHeight;\r\n\r\n//   init();\r\n// });\r\n\r\n// // Objects\r\n// class Circle {\r\n//   constructor(x, y, radius, color) {\r\n//     this.x = x;\r\n//     this.y = y;\r\n//     this.radius = radius;\r\n//     this.color = color;\r\n//   }\r\n\r\n//   draw() {\r\n//     c.beginPath();\r\n//     c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n//     c.fillStyle = this.color;\r\n//     c.fill();\r\n//     c.closePath();\r\n//   }\r\n\r\n//   update() {\r\n//     this.draw();\r\n//   }\r\n// }\r\n\r\n// // Implementation\r\n// let circle1;\r\n// let circle2;\r\n// function init() {\r\n//   circle1 = new Circle(300, 300, 100, \"black\");\r\n//   circle2 = new Circle(undefined, undefined, 30, \"red\");\r\n\r\n//   for (let i = 0; i < 400; i++) {\r\n//     // objects.push()\r\n//   }\r\n// }\r\n\r\n// // Animation Loop\r\n// function animate() {\r\n//   requestAnimationFrame(animate);\r\n//   c.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n//   // objects.forEach(object => {\r\n//   //  object.update()\r\n//   // })\r\n//   circle1.update();\r\n//   circle2.x = mouse.x;\r\n//   circle2.y = mouse.y;\r\n//   circle2.update();\r\n\r\n//   if (\r\n//     utils.distance(circle1.x, circle1.y, circle2.x, circle2.y) <\r\n//     circle1.radius + circle2.radius\r\n//   ) {\r\n//     circle1.color = \"red\";\r\n//   } else {\r\n//     circle1.color = \"black\";\r\n//   }\r\n// }\r\n\r\n// init();\r\n// animate();\r\n\r\n/*----------------- Collision Part2 ------------------------ */\r\n\r\n// const canvas = document.querySelector(\"canvas\");\r\n// const c = canvas.getContext(\"2d\");\r\n\r\n// canvas.width = innerWidth;\r\n// canvas.height = innerHeight;\r\n\r\n// const mouse = {\r\n//   x: 10,\r\n//   y: 10,\r\n// };\r\n\r\n// const colors = [\"#1B1A17\", \"#F0A500\", \"#E45826\", \"#E6D5B8\"];\r\n\r\n// // Event Listeners\r\n// addEventListener(\"mousemove\", (event) => {\r\n//   mouse.x = event.clientX;\r\n//   mouse.y = event.clientY;\r\n// });\r\n\r\n// addEventListener(\"resize\", () => {\r\n//   canvas.width = innerWidth;\r\n//   canvas.height = innerHeight;\r\n\r\n//   init();\r\n// });\r\n\r\n// // Objects\r\n// class Particle {\r\n//   constructor(x, y, radius, color) {\r\n//     this.x = x;\r\n//     this.y = y;\r\n//     this.velocity = {\r\n//       x: (Math.random() - 0.5) * 5,\r\n//       y: (Math.random() - 0.5) * 5,\r\n//     };\r\n//     this.radius = radius;\r\n//     this.color = color;\r\n//     this.mass = 1;\r\n//     this.opacity = 0;\r\n//   }\r\n\r\n//   draw() {\r\n//     c.beginPath();\r\n//     c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n//     c.save();\r\n//     c.globalAlpha = this.opacity;\r\n//     c.fillStyle = this.color;\r\n//     c.fill();\r\n//     c.restore();\r\n//     c.strokeStyle = this.color;\r\n//     c.stroke();\r\n//     c.closePath();\r\n//   }\r\n\r\n//   update(particles) {\r\n//     this.draw();\r\n\r\n//     for (let i = 0; i < particles.length; i++) {\r\n//       // To prevent to collision with itself\r\n//       if (this === particles[i]) continue;\r\n//       if (\r\n//         utils.distance(this.x, this.y, particles[i].x, particles[i].y) -\r\n//           this.radius * 2 <\r\n//         0\r\n//       ) {\r\n//         utils.resolveCollision(this, particles[i]);\r\n//       }\r\n//     }\r\n//     // To keep all the circles inside the viewport in the x axis\r\n//     if (this.x - this.radius <= 0 || this.x + this.radius >= innerWidth) {\r\n//       this.velocity.x = -this.velocity.x;\r\n//     } else if (\r\n//       this.y - this.radius <= 0 ||\r\n//       this.y + this.radius >= innerHeight\r\n//     ) {\r\n//       this.velocity.y = -this.velocity.y;\r\n//     }\r\n//     // mouse collisions detection\r\n//     if (\r\n//       utils.distance(mouse.x, mouse.y, this.x, this.y) < 120 &&\r\n//       this.opacity < 0.2\r\n//     ) {\r\n//       this.opacity += 0.02;\r\n//     } else if (this.opacity > 0) {\r\n//       this.opacity -= 0.02;\r\n//       this.opacity = Math.max(0, this.opacity);\r\n//     }\r\n//     this.x += this.velocity.x;\r\n//     this.y += this.velocity.y;\r\n//   }\r\n// }\r\n\r\n// // Implementation\r\n// let particles;\r\n// function init() {\r\n//   particles = [];\r\n\r\n//   for (let i = 0; i < 100; i++) {\r\n//     const radius = 15;\r\n//     let x = utils.randomIntFromRange(radius, canvas.width - radius);\r\n//     let y = utils.randomIntFromRange(radius, canvas.height - radius);\r\n//     const color = utils.randomColor(colors);\r\n\r\n//     if (i !== 0) {\r\n//       for (let j = 0; j < particles.length; j++) {\r\n//         if (\r\n//           utils.distance(x, y, particles[j].x, particles[j].y) - radius * 2 <\r\n//           0\r\n//         ) {\r\n//           x = utils.randomIntFromRange(radius, canvas.width - radius);\r\n//           y = utils.randomIntFromRange(radius, canvas.height - radius);\r\n//           j = -1;\r\n//         }\r\n//       }\r\n//     }\r\n\r\n//     particles.push(new Particle(x, y, radius, color));\r\n//   }\r\n// }\r\n\r\n// // Animation Loop\r\n// function animate() {\r\n//   requestAnimationFrame(animate);\r\n//   c.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n//   particles.forEach((particle) => {\r\n//     particle.update(particles);\r\n//   });\r\n// }\r\n\r\n// init();\r\n// animate();\r\n\r\n/*----------------- Collision Part3(Rectangles) ------------------------ */\r\n\r\nconst canvas = document.querySelector(\"canvas\");\r\nconst c = canvas.getContext(\"2d\");\r\n\r\ncanvas.width = innerWidth;\r\ncanvas.height = innerHeight;\r\n\r\nconst mouse = {\r\n  x: innerWidth / 2,\r\n  y: innerHeight / 2,\r\n};\r\n\r\nconst colors = [\"#1B1A17\", \"#F0A500\", \"#E45826\", \"#E6D5B8\"];\r\n\r\n// Event Listeners\r\naddEventListener(\"mousemove\", (event) => {\r\n  mouse.x = event.clientX;\r\n  mouse.y = event.clientY;\r\n});\r\n\r\n// Animation Loop\r\nfunction animate() {\r\n  requestAnimationFrame(animate);\r\n  c.fillStyle = \"#1A1A23\";\r\n  c.fillRect(0, 0, canvas.width, canvas.height);\r\n  // x coordinates and y coordinates\r\n  if (\r\n    mouse.x + 100 >= canvas.width / 2 - 50 &&\r\n    mouse.x <= canvas.width / 2 - 50 + 100 &&\r\n    mouse.y + 100 >= canvas.height / 2 - 50 &&\r\n    mouse.y <= canvas.height / 2 - 50 + 100\r\n  ) {\r\n    console.log(\"colliding\");\r\n  }\r\n\r\n  // red rectangle\r\n  c.fillStyle = \"#E86262\";\r\n  c.fillRect(mouse.x, mouse.y, 100, 100);\r\n\r\n  // blue rectangle\r\n  c.fillStyle = \"#92ABEA\";\r\n  c.fillRect(canvas.width / 2 - 50, canvas.height / 2 - 50, 100, 100);\r\n}\r\n\r\nanimate();\r\n","function randomIntFromRange(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nfunction randomColor(colors) {\r\n  return colors[Math.floor(Math.random() * colors.length)];\r\n}\r\n\r\nfunction distance(x1, y1, x2, y2) {\r\n  const xDist = x2 - x1;\r\n  const yDist = y2 - y1;\r\n\r\n  return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\r\n}\r\n\r\n/**\r\n * Rotates coordinate system for velocities\r\n *\r\n * Takes velocities and alters them as if the coordinate system they're on was rotated\r\n *\r\n * @param  Object | velocity | The velocity of an individual particle\r\n * @param  Float  | angle    | The angle of collision between two objects in radians\r\n * @return Object | The altered x and y velocities after the coordinate system has been rotated\r\n */\r\n\r\nfunction rotate(velocity, angle) {\r\n  const rotatedVelocities = {\r\n    x: velocity.x * Math.cos(angle) - velocity.y * Math.sin(angle),\r\n    y: velocity.x * Math.sin(angle) + velocity.y * Math.cos(angle),\r\n  };\r\n\r\n  return rotatedVelocities;\r\n}\r\n\r\n/**\r\n * Swaps out two colliding particles' x and y velocities after running through\r\n * an elastic collision reaction equation\r\n *\r\n * @param  Object | particle      | A particle object with x and y coordinates, plus velocity\r\n * @param  Object | otherParticle | A particle object with x and y coordinates, plus velocity\r\n * @return Null | Does not return a value\r\n */\r\n\r\nfunction resolveCollision(particle, otherParticle) {\r\n  const xVelocityDiff = particle.velocity.x - otherParticle.velocity.x;\r\n  const yVelocityDiff = particle.velocity.y - otherParticle.velocity.y;\r\n\r\n  const xDist = otherParticle.x - particle.x;\r\n  const yDist = otherParticle.y - particle.y;\r\n\r\n  // Prevent accidental overlap of particles\r\n  if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\r\n    // Grab angle between the two colliding particles\r\n    const angle = -Math.atan2(\r\n      otherParticle.y - particle.y,\r\n      otherParticle.x - particle.x\r\n    );\r\n\r\n    // Store mass in var for better readability in collision equation\r\n    const m1 = particle.mass;\r\n    const m2 = otherParticle.mass;\r\n\r\n    // Velocity before equation\r\n    const u1 = rotate(particle.velocity, angle);\r\n    const u2 = rotate(otherParticle.velocity, angle);\r\n\r\n    // Velocity after 1d collision equation\r\n    const v1 = {\r\n      x: (u1.x * (m1 - m2)) / (m1 + m2) + (u2.x * 2 * m2) / (m1 + m2),\r\n      y: u1.y,\r\n    };\r\n    const v2 = {\r\n      x: (u2.x * (m1 - m2)) / (m1 + m2) + (u1.x * 2 * m2) / (m1 + m2),\r\n      y: u2.y,\r\n    };\r\n\r\n    // Final velocity after rotating axis back to original location\r\n    const vFinal1 = rotate(v1, -angle);\r\n    const vFinal2 = rotate(v2, -angle);\r\n\r\n    // Swap particle velocities for realistic bounce effect\r\n    particle.velocity.x = vFinal1.x;\r\n    particle.velocity.y = vFinal1.y;\r\n\r\n    otherParticle.velocity.x = vFinal2.x;\r\n    otherParticle.velocity.y = vFinal2.y;\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  randomIntFromRange,\r\n  randomColor,\r\n  distance,\r\n  rotate,\r\n  resolveCollision,\r\n};\r\n"],"sourceRoot":""}